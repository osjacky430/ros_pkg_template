name: coverage

on: [push, pull_request]

jobs:
  coverage:
    runs-on: ${{ matrix.os }}
    env:
      cache_dir: |
        ${{ github.workspace }}/.ccache
      docker_ccache_dir: /home/.cache/ccache
      coverage_host_dir: ${{ github.workspace }}/coverage
      coverage_report_dir: /home/catkin_ws/build/${{ github.event.repository.name }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        ros_distro: [melodic]
        compiler: [g++]
    steps:
      - uses: actions/checkout@v3
      - run: mkdir ${{ env.coverage_host_dir }} && mkdir ${{ github.workspace }}/.ccache
      - uses: actions/cache@v3
        with:
          path: ${{ env.cache_dir }}
          key: ccache-${{ matrix.ros_distro }}
      - uses: ./.github/action/build_and_run_docker
        if: runner.os == 'Linux'
        with:
          ros_distro: ${{ matrix.ros_distro }}
          compiler: ${{ matrix.compiler }}
          docker_run_opt: |
            -v ${{ env.coverage_host_dir }}:${{ env.coverage_report_dir }}
            -v ${{ github.workspace }}/.ccache:${{ env.docker_ccache_dir }}
            -e CCACHE_DIR=${{ env.docker_ccache_dir }}
          cmd: |
            catkin build --this -v -DCMAKE_BUILD_TYPE=Coverage -DCOVERAGE_REPORT_NAME=coverage.xml
            catkin test --this -v
      - uses: codecov/codecov-action@v3
        with:
          flags: ${{ runner.os }}-${{ matrix.ros_distro }}
          name: ${{ matrix.ros_distro }}-coverage
          token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          files: ${{ env.coverage_host_dir }}/coverage.xml
          verbose: true
