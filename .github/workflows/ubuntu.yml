name: ubuntu

on: [push, pull_request]

jobs:
  industrial_ci:
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      IMMEDIATE_TEST_OUTPUT: true
      CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      ADDITIONAL_DEBS: "ros-$ROS_DISTRO-rosbash curl git"
    strategy:
      matrix:
        ROS: [kinetic, melodic]
        compiler: [clang, g++]
        llvm: [12, 13]
        exclude:
          - compiler: g++
            llvm: 12
          - compiler: g++
            llvm: 13
        include:
          - ROS: kinetic
            llvm: 12
            env:
              ROS_DISTRO: kinetic
          - ROS: melodic
            llvm: 13
            env:
              ROS_DISTRO: melodic
              ROS_REPO: main
              COVERAGE_REPORT_NAME: coverage.xml
              COVERAGE_REPORT_DIR: /root/target_ws/build/${{ github.event.repository.name }}/$COVERAGE_REPORT_NAME
              CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Coverage -DCOVERAGE_REPORT_NAME=$COVERAGE_REPORT_NAME -DENABLE_COVERAGE_REPORT=ON"
              AFTER_INSTALL_TARGET_DEPENDENCIES: "pip install gcovr"
              DOCKER_RUN_OPTS: "$(bash <(curl -s https://codecov.io/env)) -e CODACY_PROJECT_TOKEN -e COVERAGE_REPORT_NAME -e COVERAGE_REPORT_DIR"
              AFTER_SCRIPT:
                'bash <(curl -s https://codecov.io/bash) -f $(eval "echo $COVERAGE_REPORT_DIR") &&
                bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r $COVERAGE_REPORT_DIR'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.ROS }}-${{ matrix.env.ROS_REPO }}
      - uses: ./.github/action/build_docker
        with:
          ros_distro: ${{ matrix.ROS }}
          compiler: ${{ matrix.compiler }}
          llvm: ${{ matrix.llvm }}
      - uses: ros-industrial/industrial_ci@master
        env: ${{ matrix.env }}
