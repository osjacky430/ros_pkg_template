name: ubuntu

on: [push, pull_request]

jobs:
  industrial_ci:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      coverage_report_name: coverage.xml
      coverage_report_dir: /home/catkin_ws/build/${{ github.event.repository.name }}/$coverage_report_name
    strategy:
      matrix:
        os: [ubuntu-latest]
        ros_distro: [melodic]
        compiler: [g++]
        include:
          - ros_distro: melodic
            cmake_args: "-DCMAKE_BUILD_TYPE=Coverage -DCOVERAGE_REPORT_NAME=${{ env.coverage_report_name }}"

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.ros_distro }}
      - uses: ./.github/action/build_docker
        with:
          ros_distro: ${{ matrix.ros_distro }}
          compiler: ${{ matrix.compiler }}
      - name: Build and Run coverage
        uses: addnab/docker-run-action@v3
        options: $(bash <(curl -s https://codecov.io/env)) -e CODACY_PROJECT_TOKEN
        with:
          image: ros-ci:latest
          shell: bash
          run: |
            . /opt/ros/${{ matrix.ROS_DISTRO }}/setup.bash
            cd /home/catkin_ws/src/ros_pkg_template
            catkin build --this -v ${{ env.cmake_args }}
            catkin test --this -v
            bash <(curl -s https://codecov.io/bash) -f ${{ matrix.coverage_report_dir }}
            bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r ${{ matrix.coverage_report_dir }}
